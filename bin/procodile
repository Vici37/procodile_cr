#!/usr/bin/env ruby
$:.unshift(File.expand_path('../../lib', __FILE__))

require 'optparse'
require 'fileutils'
require 'procodile'
require 'procodile/version'
require 'procodile/error'
require 'procodile/config'
require 'procodile/cli'

Thread.abort_on_exception = true

command = ARGV[0] || 'help'
cli = Procodile::CLI.new

options = {}
begin
  OptionParser.new do |opts|
    opts.version = Procodile::VERSION
    opts.banner = "Usage: procodile #{command} [options]"
    opts.on("-r", "--root PATH", "The path to the root of your application") do |root|
      options[:root] = root
    end
    if cli.class.commands[command.to_sym] && option_block = cli.class.commands[command.to_sym][:options]
      option_block.call(opts, cli)
    end
  end.parse!
rescue OptionParser::InvalidOption => e
  $stderr.puts "Error: #{e.message}".color(31)
  exit 1
end

begin
  if command != 'help'
    cli.config = Procodile::Config.new(options[:root] ? File.expand_path(options[:root]) : FileUtils.pwd)
  end
  cli.run(command)
rescue Procodile::Error => e
  $stderr.puts "Error: #{e.message}".color(31)
  exit 1
end
